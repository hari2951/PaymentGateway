@page "/sales"
@using Microsoft.AspNetCore.Components.Forms
@using ProductReport.Features.Sales.ViewModels
@using ProductReport.Features.Sales.Models
@inject SalesViewModel ViewModel

<div class="container-fluid">
    <h2 class="mb-4">Sales Report</h2>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Upload Sales Data</h5>
                    <InputFile OnChange="@OnFileSelected" class="form-control" accept=".csv" />
                    <button class="btn btn-primary mt-2" @onclick="@LoadDefaultData">Load Default Data</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <select class="form-select" @bind="ViewModel.SelectedSegment">
                <option value="">All Segments</option>
                @foreach (var segment in ViewModel.Segments)
                {
                    <option value="@segment">@segment</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-select" @bind="ViewModel.SelectedCountry">
                <option value="">All Countries</option>
                @foreach (var country in ViewModel.Countries)
                {
                    <option value="@country">@country</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-select" @bind="ViewModel.SelectedProduct">
                <option value="">All Products</option>
                @foreach (var product in ViewModel.Products)
                {
                    <option value="@product">@product</option>
                }
            </select>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Summary</h5>
            <div class="row">
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6>Total Units Sold</h6>
                            <h3>@ViewModel.TotalUnitsSold.ToString("N0")</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6>Total Manufacturing Cost</h6>
                            <h3>@ViewModel.TotalManufacturingPrice.ToString("C")</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6>Total Sales</h6>
                            <h3>@ViewModel.TotalSalePrice.ToString("C")</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6>Total Profit/Loss</h6>
                            <h3 class="@(ViewModel.TotalProfitLoss >= 0 ? "text-success" : "text-danger")">
                                @ViewModel.TotalProfitLoss.ToString("C")
                            </h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th @onclick="@(() => ViewModel.SortBy("Date"))" style="cursor: pointer">Date</th>
                    <th @onclick="@(() => ViewModel.SortBy("Segment"))" style="cursor: pointer">Segment</th>
                    <th @onclick="@(() => ViewModel.SortBy("Country"))" style="cursor: pointer">Country</th>
                    <th @onclick="@(() => ViewModel.SortBy("Product"))" style="cursor: pointer">Product</th>
                    <th @onclick="@(() => ViewModel.SortBy("UnitsSold"))" style="cursor: pointer">Units Sold</th>
                    <th @onclick="@(() => ViewModel.SortBy("ManufacturingPrice"))" style="cursor: pointer">Manufacturing Price</th>
                    <th @onclick="@(() => ViewModel.SortBy("SalePrice"))" style="cursor: pointer">Sale Price</th>
                    <th @onclick="@(() => ViewModel.SortBy("ProfitLoss"))" style="cursor: pointer">Profit/Loss</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var record in ViewModel.SalesRecords)
                {
                    <tr>
                        <td>@record.Date.ToShortDateString()</td>
                        <td>@record.Segment</td>
                        <td>@record.Country</td>
                        <td>@record.Product</td>
                        <td>@record.UnitsSold.ToString("N0")</td>
                        <td>@record.ManufacturingPrice.ToString("C")</td>
                        <td>@record.SalePrice.ToString("C")</td>
                        <td class="@(record.ProfitLoss >= 0 ? "text-success" : "text-danger")">
                            @record.ProfitLoss.ToString("C")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        await ViewModel.ProcessUploadedFileAsync(e.File);
    }

    private async Task LoadDefaultData()
    {
        await ViewModel.LoadDefaultDataAsync();
    }
} 